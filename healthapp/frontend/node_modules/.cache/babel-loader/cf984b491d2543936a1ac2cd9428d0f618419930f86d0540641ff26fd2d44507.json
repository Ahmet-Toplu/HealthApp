{"ast":null,"code":"var _jsxFileName = \"/Users/alexhofman/ComputingProject/HealthApp/healthapp/frontend/src/pages/map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MapsPage = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, error => {\n        console.log(error);\n      });\n    }\n  }, []);\n  const renderMarkers = (map, maps) => {\n    let marker = new maps.Marker({\n      position: userLocation,\n      map,\n      title: 'Your Location'\n    });\n    return marker;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        bootstrapURLKeys: {\n          key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n        },\n        defaultCenter: userLocation,\n        defaultZoom: 10,\n        yesIWantToUseGoogleMapApiInternals: true,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => renderMarkers(map, maps)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MapsPage, \"tBb+ryomPmrBvnn9NjkAIlzHge8=\");\n_c = MapsPage;\nvar _c;\n$RefreshReg$(_c, \"MapsPage\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMapReact","jsxDEV","_jsxDEV","MapsPage","_s","userLocation","setUserLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","error","console","log","renderMarkers","map","maps","marker","Marker","title","className","children","style","height","width","bootstrapURLKeys","key","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexhofman/ComputingProject/HealthApp/healthapp/frontend/src/pages/map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GoogleMapReact from 'google-map-react';\n\nexport const MapsPage = () => {\n  const [userLocation, setUserLocation] = useState(null);\n\n  useEffect(() => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    }\n  }, []);\n\n  const renderMarkers = (map, maps) => {\n    let marker = new maps.Marker({\n      position: userLocation,\n      map,\n      title: 'Your Location'\n    });\n    return marker;\n  };\n\n  return (\n    <div className=\"page-container\">\n      <div style={{ height: '100vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY }}\n          defaultCenter={userLocation}\n          defaultZoom={10}\n          yesIWantToUseGoogleMapApiInternals\n          onGoogleApiLoaded={({ map, maps }) => renderMarkers(map, maps)}\n        />\n      </div>\n      <div className=\"content\">\n        {/* Your page content goes here */}\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAI,aAAa,IAAIQ,SAAS,EAAE;MAC9BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZJ,eAAe,CAAC;UACdK,GAAG,EAAED,QAAQ,CAACE,MAAM,CAACC,QAAQ;UAC7BC,GAAG,EAAEJ,QAAQ,CAACE,MAAM,CAACG;QACvB,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,IAAK;QACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CACF,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;IACnC,IAAIC,MAAM,GAAG,IAAID,IAAI,CAACE,MAAM,CAAC;MAC3Bb,QAAQ,EAAEL,YAAY;MACtBe,GAAG;MACHI,KAAK,EAAE;IACT,CAAC,CAAC;IACF,OAAOF,MAAM;EACf,CAAC;EAED,oBACEpB,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BxB,OAAA;MAAKyB,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAH,QAAA,eAC7CxB,OAAA,CAACF,cAAc;QACb8B,gBAAgB,EAAE;UAAEC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC;QAA8B,CAAE;QACrEC,aAAa,EAAE9B,YAAa;QAC5B+B,WAAW,EAAE,EAAG;QAChBC,kCAAkC;QAClCC,iBAAiB,EAAEA,CAAC;UAAElB,GAAG;UAAEC;QAAK,CAAC,KAAKF,aAAa,CAACC,GAAG,EAAEC,IAAI;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxC,OAAA;MAAKuB,SAAS,EAAC;IAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CA5CWD,QAAQ;AAAAwC,EAAA,GAARxC,QAAQ;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}