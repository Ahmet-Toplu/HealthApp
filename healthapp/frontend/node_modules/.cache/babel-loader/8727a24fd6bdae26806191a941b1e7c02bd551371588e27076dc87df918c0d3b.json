{"ast":null,"code":"var _jsxFileName = \"/Users/alexhofman/ComputingProject/HealthApp/healthapp/frontend/src/pages/forum.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ForumPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [questionTitle, setQuestionTitle] = useState('');\n  const [questionDescription, setQuestionDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Fetch questions from the server\n  useEffect(() => {\n    setLoading(true);\n    axios.get('/api/questions').then(response => {\n      setQuestions(response.data);\n      setLoading(false);\n    }).catch(error => console.error(\"There was an error fetching the questions: \", error));\n  }, []);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const questionData = {\n      title: questionTitle,\n      description: questionDescription\n    };\n    axios.post('/api/questions', questionData).then(response => {\n      // Optionally clear the form\n      setQuestionTitle('');\n      setQuestionDescription('');\n      // Refresh the questions list (or you can optimistically update the UI)\n      setQuestions([...questions, response.data]);\n    }).catch(error => console.error(\"There was an error posting the question: \", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Health Forum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this) : questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: questionTitle,\n          onChange: e => setQuestionTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: questionDescription,\n          onChange: e => setQuestionDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Post Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ForumPage, \"uWEIyHc1KUM7cxfhBhv5hOuUPjE=\");\n_c = ForumPage;\nvar _c;\n$RefreshReg$(_c, \"ForumPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ForumPage","_s","questions","setQuestions","questionTitle","setQuestionTitle","questionDescription","setQuestionDescription","loading","setLoading","get","then","response","data","catch","error","console","handleSubmit","event","preventDefault","questionData","title","description","post","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","id","onSubmit","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/alexhofman/ComputingProject/HealthApp/healthapp/frontend/src/pages/forum.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const ForumPage = () => {\n  const [questions, setQuestions] = useState([]);\n  const [questionTitle, setQuestionTitle] = useState('');\n  const [questionDescription, setQuestionDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Fetch questions from the server\n  useEffect(() => {\n    setLoading(true);\n    axios.get('/api/questions')\n      .then(response => {\n        setQuestions(response.data);\n        setLoading(false);\n      })\n      .catch(error => console.error(\"There was an error fetching the questions: \", error));\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const questionData = {\n      title: questionTitle,\n      description: questionDescription,\n    };\n    axios.post('/api/questions', questionData)\n      .then(response => {\n        // Optionally clear the form\n        setQuestionTitle('');\n        setQuestionDescription('');\n        // Refresh the questions list (or you can optimistically update the UI)\n        setQuestions([...questions, response.data]);\n      })\n      .catch(error => console.error(\"There was an error posting the question: \", error));\n  };\n\n  return (\n    <div>\n      <h1>Health Forum</h1>\n      {loading ? <p>Loading questions...</p> : questions.map(question => (\n        <div key={question.id}>\n          <h2>{question.title}</h2>\n          <p>{question.description}</p>\n          {/* Additional info like author and timestamps can be added here */}\n        </div>\n      ))}\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={questionTitle}\n            onChange={(e) => setQuestionTitle(e.target.value)}\n          />\n        </div>\n        <div>\n          <label>Description</label>\n          <textarea\n            value={questionDescription}\n            onChange={(e) => setQuestionDescription(e.target.value)}\n          />\n        </div>\n        <button type=\"submit\">Post Question</button>\n      </form>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}