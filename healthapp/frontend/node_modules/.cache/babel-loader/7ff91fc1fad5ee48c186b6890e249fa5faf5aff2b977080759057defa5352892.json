{"ast":null,"code":"var _jsxFileName = \"/Users/alexhofman/ComputingProject/HealthApp/healthapp/frontend/src/pages/chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const handleInputChange = event => {\n    setUserInput(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Add user's message to the conversation\n    setMessages([...messages, {\n      text: userInput,\n      type: 'user'\n    }]);\n    setUserInput('');\n    try {\n      // Send user input to Dialogflow API for processing\n      const response = await axios.post('/dialogflow', {\n        text: userInput\n      });\n\n      // Add the bot's response to the conversation\n      setMessages([...messages, {\n        text: response.data.fulfillmentText,\n        type: 'bot'\n      }]);\n    } catch (error) {\n      console.error('Error sending user input to Dialogflow:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message message-${message.type}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: userInput,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HfxAD2MO2c7ZhY4vijqw2/NvqkQ=\");\n_c = Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userInput","setUserInput","handleInputChange","event","target","value","handleSubmit","preventDefault","text","type","response","post","data","fulfillmentText","error","console","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/alexhofman/ComputingProject/HealthApp/healthapp/frontend/src/pages/chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport const Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n\n  const handleInputChange = (event) => {\n    setUserInput(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    // Add user's message to the conversation\n    setMessages([...messages, { text: userInput, type: 'user' }]);\n    setUserInput('');\n\n    try {\n      // Send user input to Dialogflow API for processing\n      const response = await axios.post('/dialogflow', {\n        text: userInput,\n      });\n\n      // Add the bot's response to the conversation\n      setMessages([...messages, { text: response.data.fulfillmentText, type: 'bot' }]);\n    } catch (error) {\n      console.error('Error sending user input to Dialogflow:', error);\n    }\n  };\n\n  return (\n    <div className=\"chatbot\">\n      <div className=\"chatbot-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message message-${message.type}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <form className=\"chatbot-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={userInput}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,YAAY,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,CAAC,CAAC;;IAEtB;IACAR,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEU,IAAI,EAAER,SAAS;MAAES,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;IAC7DR,YAAY,CAAC,EAAE,CAAC;IAEhB,IAAI;MACF;MACA,MAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,aAAa,EAAE;QAC/CH,IAAI,EAAER;MACR,CAAC,CAAC;;MAEF;MACAD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEU,IAAI,EAAEE,QAAQ,CAACE,IAAI,CAACC,eAAe;QAAEJ,IAAI,EAAE;MAAM,CAAC,CAAC,CAAC;IAClF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBtB,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BnB,QAAQ,CAACoB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BzB,OAAA;QAAiBqB,SAAS,EAAG,mBAAkBG,OAAO,CAACV,IAAK,EAAE;QAAAQ,QAAA,EAC3DE,OAAO,CAACX;MAAI,GADLY,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA;MAAMqB,SAAS,EAAC,cAAc;MAACS,QAAQ,EAAEnB,YAAa;MAAAW,QAAA,gBACpDtB,OAAA;QACEc,IAAI,EAAC,MAAM;QACXiB,WAAW,EAAC,sBAAsB;QAClCrB,KAAK,EAAEL,SAAU;QACjB2B,QAAQ,EAAEzB;MAAkB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACF7B,OAAA;QAAQc,IAAI,EAAC,QAAQ;QAAAQ,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAhDWD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}