{"ast":null,"code":"var _jsxFileName = \"/Users/alexhofman/ComputingProject/HealthApp/healthapp/frontend/src/pages/contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react'; // Import useCallback\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactPage = () => {\n  _s();\n  const [location, setLocation] = useState({\n    lat: null,\n    lng: null\n  });\n  const [contacts, setContacts] = useState([]); // State to store fetched contacts\n\n  // Wrap fetchContacts with useCallback\n  const fetchContacts = useCallback(() => {\n    if (location.lat && location.lng) {\n      axios.get(`http://localhost:8081/api/contact?lat=${location.lat}&lng=${location.lng}`).then(response => {\n        // Process your response here\n        console.log(response.data);\n      }).catch(error => {\n        console.error('Error fetching hospitals:', error);\n      });\n    }\n  }, [location.lat, location.lng]); // Dependencies for useCallback\n\n  useEffect(() => {\n    const onSuccess = position => {\n      setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    };\n    navigator.geolocation.getCurrentPosition(onSuccess);\n  }, []);\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]); // Now fetchContacts is a dependency, but stable thanks to useCallback\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-3 mt-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '88px',\n        height: '100vh',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"404 Page Not Found Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactPage, \"XZSXblNy5XstIybi2wSmORWVLyc=\");\n_c = ContactPage;\nvar _c;\n$RefreshReg$(_c, \"ContactPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","ContactPage","_s","location","setLocation","lat","lng","contacts","setContacts","fetchContacts","get","then","response","console","log","data","catch","error","onSuccess","position","coords","latitude","longitude","navigator","geolocation","getCurrentPosition","className","children","style","paddingBottom","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alexhofman/ComputingProject/HealthApp/healthapp/frontend/src/pages/contact.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'; // Import useCallback\nimport axios from 'axios';\n\nexport const ContactPage = () => {\n    const [location, setLocation] = useState({ lat: null, lng: null });\n    const [contacts, setContacts] = useState([]); // State to store fetched contacts\n\n\n    // Wrap fetchContacts with useCallback\n    const fetchContacts = useCallback(() => {\n        if (location.lat && location.lng) {\n            axios.get(`http://localhost:8081/api/contact?lat=${location.lat}&lng=${location.lng}`)\n              .then(response => {\n                  // Process your response here\n                  console.log(response.data);\n              })\n              .catch(error => {\n                  console.error('Error fetching hospitals:', error);\n              });\n        }\n    }, [location.lat, location.lng]); // Dependencies for useCallback\n\n    useEffect(() => {\n        const onSuccess = (position) => {\n            setLocation({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            });\n        };\n\n        navigator.geolocation.getCurrentPosition(onSuccess);\n    }, []);\n\n    useEffect(() => {\n        fetchContacts();\n    }, [fetchContacts]); // Now fetchContacts is a dependency, but stable thanks to useCallback\n\n    return (\n        <div className='mx-3 mt-3'>\n            <div style={{ paddingBottom: '88px', height: '100vh', width: '100%' }}>\n                <h1>404 Page Not Found Contacts</h1>\n            </div>\n        </div>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO,CAAC,CAAC;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IAAEU,GAAG,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAK,CAAC,CAAC;EAClE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAG9C;EACA,MAAMc,aAAa,GAAGZ,WAAW,CAAC,MAAM;IACpC,IAAIM,QAAQ,CAACE,GAAG,IAAIF,QAAQ,CAACG,GAAG,EAAE;MAC9BR,KAAK,CAACY,GAAG,CAAE,yCAAwCP,QAAQ,CAACE,GAAI,QAAOF,QAAQ,CAACG,GAAI,EAAC,CAAC,CACnFK,IAAI,CAACC,QAAQ,IAAI;QACd;QACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;IACR;EACJ,CAAC,EAAE,CAACd,QAAQ,CAACE,GAAG,EAAEF,QAAQ,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC;;EAElCV,SAAS,CAAC,MAAM;IACZ,MAAMsB,SAAS,GAAIC,QAAQ,IAAK;MAC5Bf,WAAW,CAAC;QACVC,GAAG,EAAEc,QAAQ,CAACC,MAAM,CAACC,QAAQ;QAC7Bf,GAAG,EAAEa,QAAQ,CAACC,MAAM,CAACE;MACvB,CAAC,CAAC;IACN,CAAC;IAEDC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACP,SAAS,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACZa,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC,CAAC,CAAC;;EAErB,oBACIT,OAAA;IAAK0B,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtB3B,OAAA;MAAK4B,KAAK,EAAE;QAAEC,aAAa,EAAE,MAAM;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAJ,QAAA,eAClE3B,OAAA;QAAA2B,QAAA,EAAI;MAA2B;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjC,EAAA,CAzCWD,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}